{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Isaac\\\\OneDrive\\\\Escritorio\\\\formulariocomp\\\\src\\\\store\\\\appContext.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getState } from \"./flux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/React.createContext(null);\n\nconst injectContext = PassedComponent => {\n  var _s = $RefreshSig$();\n\n  const StoreWrapper = props => {\n    _s();\n\n    const [state, setState] = useState(getState({\n      getActions: () => state.actions,\n      getStore: () => state.store,\n      setStore: updatedStore => setState({\n        store: Object.assing(state.store, updatedStore),\n        actions: { ...state.actions\n        }\n      })\n    }));\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: state,\n      children: /*#__PURE__*/_jsxDEV(PassedComponent, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(StoreWrapper, \"wUvRxwqTckTf7IDMypdUUtz3BwM=\");\n\n  return StoreWrapper;\n};\n\nexport default injectContext;","map":{"version":3,"sources":["C:/Users/Isaac/OneDrive/Escritorio/formulariocomp/src/store/appContext.js"],"names":["React","useState","useEffect","getState","Context","createContext","injectContext","PassedComponent","StoreWrapper","props","state","setState","getActions","actions","getStore","store","setStore","updatedStore","Object","assing"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;;AAEA,OAAO,MAAMC,OAAO,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,IAApB,CAAhB;;AAEP,MAAMC,aAAa,GAAGC,eAAe,IAAI;AAAA;;AACrC,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,UAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAC9BE,QAAQ,CAAC;AACLS,MAAAA,UAAU,EAAE,MAAKF,KAAK,CAACG,OADlB;AAELC,MAAAA,QAAQ,EAAE,MAAKJ,KAAK,CAACK,KAFhB;AAGLC,MAAAA,QAAQ,EAAEC,YAAY,IAAIN,QAAQ,CAAC;AAC/BI,QAAAA,KAAK,EAAEG,MAAM,CAACC,MAAP,CAAcT,KAAK,CAACK,KAApB,EAA2BE,YAA3B,CADwB;AAE/BJ,QAAAA,OAAO,EAAE,EAAC,GAAGH,KAAK,CAACG;AAAV;AAFsB,OAAD;AAH7B,KAAD,CADsB,CAAlC;AAeA,wBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAEH,KAAzB;AAAA,6BACI,QAAC,eAAD,OAAqBD;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GArBD;;AADqC,KAC/BD,YAD+B;;AAuBrC,SAAOA,YAAP;AAEH,CAzBD;;AA2BA,eAAeF,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"; \r\nimport { getState } from \"./flux\";\r\n\r\nexport const Context = React.createContext(null);\r\n\r\nconst injectContext = PassedComponent => {\r\n    const StoreWrapper = (props) => {\r\n        const [state, setState] = useState(\r\n            getState({\r\n                getActions: ()=> state.actions,\r\n                getStore: ()=> state.store,\r\n                setStore: updatedStore => setState({\r\n                    store: Object.assing(state.store, updatedStore),\r\n                    actions: {...state.actions}\r\n                })\r\n\r\n            })\r\n        );\r\n        \r\n       \r\n\r\n\r\n        return (\r\n            <Context.Provider value={state}>\r\n                <PassedComponent {...props}/>\r\n            </Context.Provider>\r\n        );\r\n    };\r\n    return StoreWrapper;\r\n\r\n};\r\n\r\nexport default injectContext;"]},"metadata":{},"sourceType":"module"}